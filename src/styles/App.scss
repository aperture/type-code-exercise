@import "~bootstrap/scss/bootstrap";
@import "fontface";
@include fontFace('mono-black','mono-black');
@include fontFace('mono-regular','mono-regular');
@include fontFace('sans','sans-black');
:root {
	// We just need to know these 3 values up front:
	--wrapper: 100vw;
	--gutter: 10px;
	--noOfColumns: 14;

	--noOfGutters: calc(var(--noOfColumns) - 1);
	--ratioA: 1;
	--ratioB: 1;
	// Use the aspect ratio to calculate the factor for multiplication:
	--factor: calc(var(--ratioB) / var(--ratioA));

	// Calculating the row height:
	--rh: calc(( (var(--wrapper) - (var(--noOfGutters) * var(--gutter)))
		/ var(--noOfColumns)) * var(--factor));
	padding: --rh;
}

.App {
  font-size: 16px;
  font-family: 'sans';
  .grid {
    max-width: var(--wrapper);
    min-height: 100vh;
  	display: grid;
  	grid-template-columns: repeat(var(--noOfColumns), 1fr);
  	grid-auto-flow: dense;
  	grid-auto-rows: minmax(var(--rh), auto); // If the content is taller then the box will grow to fit. This is only going to work if the column value is 1fr
  	grid-gap: var(--gutter);
    .content {
      margin: var(--rh);
    	grid-column: span 14;
    	// background-color: #ccc;
      h1 {
        font-size: 3.75rem;
        text-transform:uppercase;
      }
      .loading {
        width:100%;
        height:100%;
        display:flex;
        align-items: center;
        justify-content: center;
      }
      .frame-box {
				height: 100%;
        position: relative;
			}
    }
	}
}
